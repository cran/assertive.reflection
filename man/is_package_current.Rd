% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assert-is-current.R, R/is-current.R
\name{assert_is_package_current}
\alias{assert_is_package_current}
\alias{is_package_current}
\title{Is the installed version of a package current?}
\usage{
assert_is_package_current(x, lib.loc = .libPaths(),
  repos = getOption("repos"), type = getOption("pkgType"),
  severity = getOption("assertive.severity", "stop"))

is_package_current(x, lib.loc = .libPaths(), repos = getOption("repos"),
  type = getOption("pkgType"), .xname = get_name_in_parent(x))
}
\arguments{
\item{x}{A string giving a package name.}

\item{lib.loc}{A character vector of paths to local package libraries.}

\item{repos}{A character vector of URLs to repositories to check for new
package versions.}

\item{type}{Check the repository for source or binary packages?}

\item{severity}{How severe should the consequences of the assertion be?
Either \code{"stop"}, \code{"warning"}, \code{"message"}, or \code{"none"}.}

\item{.xname}{Not intended to be used directly.}
}
\value{
The \code{is_*} functions return \code{TRUE} or \code{FALSE}.
The \code{assert_*} functions throw an error in the event of failure.
}
\description{
Checks to see if the installed version of a package is current.
}
\examples{
\donttest{
# This test is marked "dont-test" since it involves a connection to 
# repositories which is potentially long running.
is_package_current("assertive.reflection")
}
}
\seealso{
\code{\link[utils]{old.packages}}, on which this is based, which
has advanced usage features.
}

